#include <iostream>
#include <stdexcept>

void function1() {
    std::cout << "Executing function1." << std::endl;
    throw std::runtime_error("runtime_error occurred in function1");
}

void function2() {
    std::cout << "Executing function2." << std::endl;
    throw std::out_of_range("out_of_range exception occurred in function2");
}

void function3() {
    std::cout << "Executing function3." << std::endl;
    throw std::logic_error("logic_error occurred in function3");
}

int main() {
    try {
        function1();
    } catch (const std::runtime_error& e) {
        std::cerr << "Caught runtime_error: " << e.what() << std::endl;
    } catch (const std::exception& e) {
        std::cerr << "Caught exception: " << e.what() << std::endl;
    }

    try {
        function2();
    } catch (const std::out_of_range& e) {
        std::cerr << "Caught out_of_range: " << e.what() << std::endl;
    } catch (const std::exception& e) {
        std::cerr << "Caught exception: " << e.what() << std::endl;
    }

    try {
        function3();
    } catch (const std::logic_error& e) {
        std::cerr << "Caught logic_error: " << e.what() << std::endl;
    } catch (const std::exception& e) {
        std::cerr << "Caught exception: " << e.what() << std::endl;
    }

    return 0;
}


output:
Executing function1.
Caught runtime_error: runtime_error occurred in function1
Executing function2.
Caught out_of_range: out_of_range exception occurred in function2
Executing function3.
Caught logic_error: logic_error occurred in function3
